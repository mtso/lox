class Object {}

fun split(hay, needle) {
  var needleLen = strlen(needle);
  var len = strlen(hay);
  var result = Object();
  var start = 0;
  var end = 0;
  var count = 0;
  for (var i = 0; i < len - needleLen + 1; i = i + 1) {
    var potential = substr(hay, i, i + needleLen);
    if (potential == needle) {
      result.(count) = substr(hay, start, end);
      start = end + needleLen;
      end = start;
      i = i + needleLen - 1;
      count = count + 1;
    } else {
      end = end + 1;
    }
  }
  result.(count) = substr(hay, start, len);
  result.len = count + 1;
  return result;
}

fun expect(condition, message) {
  if (condition) {
    print("PASS : " + message);
  } else {
    print("FAIL : " + message);
  }
}

var result = split(":1", ":");
expect(result.(0) == "", "First element empty string");
expect(result.(1) == "1", "Second element the characters after");
expect(result.len == 2, "Length should be in sync");

var result2 = split("a::bc", "::");
expect(result2.(0) == "a", "First element");
expect(result2.(1) == "bc", "Second element correct");
expect(result2.len == 2, "Length should be in sync");
